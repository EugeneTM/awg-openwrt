# default workflow for creating release from multi-target builds

name: create release from multibuild

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      openwrt_versions:
        description: "OpenWrt version(s)"
        type: string
        required: true
        default: "23.05.5 23.05.3"

jobs:
  generate-target-matrix:
    runs-on: ubuntu-22.04
    outputs:
      build-matrix: ${{ steps.generate-target-matrix.outputs.BUILD_MATRIX }}
    env:
      OPENWRT_RELEASES: ${{ inputs.openwrt_versions || vars.DEFAULT_OPENWRT_VERSIONS }}
    steps:
      - name: checkout amneziawg-openwrt
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: prepare virtualenv
        id: prepare-virtualenv
        run: |
          make show-env
          make venv

      - name: generate target matrix
        id: generate-target-matrix
        run: |
          make generate-target-matrix >> $GITHUB_OUTPUT

  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch }} :: ${{ matrix.build_env.target }}/${{ matrix.build_env.subtarget }} amneziawg release"
    runs-on: ubuntu-22.04
    needs: generate-target-matrix
    strategy:
      matrix:
        build_env: ${{ fromJson(needs.generate-target-matrix.outputs.build-matrix) }}

    env:
      OPENWRT_RELEASE: ${{ matrix.build_env.tag }}
      OPENWRT_ARCH: ${{ matrix.build_env.pkgarch }}
      OPENWRT_TARGET: ${{ matrix.build_env.target }}
      OPENWRT_SUBTARGET: ${{ matrix.build_env.subtarget }}
      OPENWRT_VERMAGIC: ${{ matrix.build_env.vermagic }}

    steps:
      - name: checkout amneziawg-openwrt
        uses: actions/checkout@v4
        with:
          path: amneziawg-openwrt
          fetch-depth: 0

      - name: check amneziawg-openwrt release readiness
        id: check-amneziawg-release
        run: |
          set -x
          cd amneziawg-openwrt
          make show-env
          make check-release

      - name: checkout openwrt
        uses: actions/checkout@v4
        with:
          path: openwrt
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: checkout usign
        uses: actions/checkout@v4
        with:
          path: usign
          repository: openwrt/usign
          fetch-depth: 0

      - name: build usign
        id: build-usign
        run: |
          set -x
          cd usign
          mkdir build
          cd build
          cmake ..
          make -j
          echo "$(pwd)" >> $GITHUB_PATH

      - name: restore cached tools and kernel
        id: cache-tools-kernel-restore
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: true
          key: ${{ runner.os }}-openwrt-cache-toolchain-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch }}-${{ matrix.build_env.target }}-${{ matrix.build_env.subtarget }}
          restore-keys: |
            ${{ runner.os }}-openwrt-cache-tools-kernel-${{ matrix.build_env.pkgarch }}-
          path: |
            openwrt/.config
            openwrt/.config.old
            openwrt/feeds.conf
            openwrt/bin/**
            openwrt/build_dir/**
            openwrt/dl/**
            openwrt/feeds/**
            openwrt/package/**
            openwrt/staging_dir/**
            openwrt/tmp/**

      - name: build amneziawg
        id: build-amneziawg
        run: |
          set -x
          cd amneziawg-openwrt
          make show-env
          time -p make build-amneziawg
          cat << EOF >release.sec
          ${{ secrets.RELEASE_FEED_SEC_KEY }}
          EOF
          cat << EOF >release.pub
          ${{ secrets.RELEASE_FEED_PUB_KEY }}
          EOF
          make prepare-artifacts
          FEED_SEC_KEY=$(pwd)/release.sec FEED_PUB_KEY=$(pwd)/release.pub make prepare-release
          cp release.pub ../awgrelease/amneziawg-public.key

      - name: upload artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: amneziawg-${{ steps.build-amneziawg.outputs.version_str }}-openwrt-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-${{ matrix.build_env.target}}-${{ matrix.build_env.subtarget}}
          path: awgrelease/*

  create-release:
    name: create-release
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          path: awgrelease/
          merge-multiple: true

      - name: show artifacts
        run: ls -Rl awgrelease/

      - name: create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            awgrelease/*.tar.gz
            awgrelease/amneziawg-public.key
