name: Create Release on Tag

on:
  workflow_dispatch:
    inputs:
      openwrt_version:
        description: "OpenWrt version"
        type: string
        required: true
        default: "23.05.3"
      openwrt_arch:
        description: "OpenWrt arch"
        type: string
        required: true
        default: "mips_24kc"
      openwrt_target:
        description: "OpenWrt target"
        type: string
        required: true
        default: "ath79"
      openwrt_subtarget:
        description: "OpenWrt subtarget"
        type: string
        required: true
        default: "generic"
      openwrt_vermagic:
        description: "OpenWrt vermagic"
        type: string
        required: true
        default: "34a8cffa541c94af8232fe9af7a1f5ba"

#  push:
#    tags:
#      - "v*.*.*"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        build_env:
          - tag: ${{ inputs.openwrt_version }}
            pkgarch: ${{ inputs.openwrt_arch }}
            target: ${{ inputs.openwrt_target }}
            subtarget: ${{ inputs.openwrt_subtarget }}
            vermagic: ${{ inputs.openwrt_vermagic }}

    steps:
      - name: Checkout AmneziaWG-OpenWrt
        uses: actions/checkout@v4
        with:
          path: amneziawg-openwrt

      - name: Checkout OpenWrt
        uses: actions/checkout@v4
        with:
          path: openwrt
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: Restore cached Tools and Kernel
        id: cache-tools-kernel-restore
        uses: actions/cache/restore@v4
        env:
          cache-name: "cache-tools-kernel-${{ matrix.build_env.pkgarch}}-${{ matrix.build_env.target}}-${{ matrix.build_env.subtarget}}"
        with:
          path: "openwrt/**"
          key: ${{ runner.os }}-openwrt-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-openwrt-cache-tools-kernel-${{ matrix.build_env.pkgarch}}-

      - name: Building kernel and tools
        #if: ${{ steps.cache-tools-kernel.outputs.cache-hit != 'true' }}
        run: |
          echo "pkgarch: ${{ matrix.build_env.pkgarch}}, target:${{ matrix.build_env.target}}, subtarget: ${{ matrix.build_env.subtarget}}"

          cd openwrt

          # Setup & install feeds
          echo "src-git awgopenwrt ../amneziawg-openwrt^${{ github.sha }}" > feeds.conf
          curl -fsL https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/feeds.buildinfo >> feeds.conf
          echo "    > feeds.conf:"
          cat feeds.conf
          ./scripts/feeds update
          ./scripts/feeds install -a

          # Setup config with AWG and dependencies
          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-proto-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config

          make defconfig

          echo "    > make tools/install"
          make tools/install -i -j `nproc`

          echo "    > make toolchain/install"
          make toolchain/install  -i -j `nproc`

          # compile kernel module
          echo "    > make target/linux/compile"
          make target/linux/compile  -i -j `nproc` V=s

          VERMAGIC=`cat ./build_dir/target-${{ matrix.build_env.pkgarch}}*/linux-${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}/linux-*/.vermagic`
          echo "Vermagic: $VERMAGIC"

          VERMAGIC_EXPECTED=${{ matrix.build_env.vermagic }}
          if [ "$VERMAGIC" != "$VERMAGIC_EXPECTED" ]; then
            echo Vermagic mismatch: $VERMAGIC, expected $VERMAGIC_EXPECTED
            exit 1
          fi

      - name: Save Tools and Kernel
        id: cache-tools-kernel-save
        uses: actions/cache/save@v4
        env:
          cache-name: "cache-tools-kernel-${{ matrix.build_env.pkgarch}}-${{ matrix.build_env.target}}-${{ matrix.build_env.subtarget}}"
        with:
          path: "openwrt/**"
          key: ${{ runner.os }}-openwrt-${{ env.cache-name }}

      - name: Build AmneziaWG
        run: |
          cd openwrt

          VERMAGIC=`cat ./build_dir/target-${{ matrix.build_env.pkgarch}}*/linux-${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}/linux-*/.vermagic`
          echo "Vermagic: $VERMAGIC"

          VERMAGIC_EXPECTED=${{ matrix.build_env.vermagic }}
          if [ "$VERMAGIC" != "$VERMAGIC_EXPECTED" ]; then
            echo Vermagic mismatch: $VERMAGIC, expected $VERMAGIC_EXPECTED
            exit 1
          fi

          make package/kmod-amneziawg/{clean,download,prepare} V=s
          make package/kmod-amneziawg/compile V=s

          make package/luci-proto-amneziawg/{clean,download,prepare}
          make package/luci-proto-amneziawg/compile V=s

          make V=s package/amneziawg-tools/{clean,download,prepare}
          make V=s package/amneziawg-tools/compile

      - name: Prepare artifacts
        run: |
          tag_name=${{ github.ref_name }}
          mkdir -p awgrelease
          postfix="${tag_name}_v${{ matrix.build_env.tag }}_${{ matrix.build_env.pkgarch}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          cp openwrt/bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp openwrt/bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-proto-amneziawg_*.ipk awgrelease/luci-proto-amneziawg_${postfix}.ipk
          cp openwrt/bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: awgrelease/*.ipk
