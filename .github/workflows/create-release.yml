name: create release

on:
  workflow_dispatch:
    inputs:
      openwrt_version:
        description: "OpenWrt version"
        type: string
        required: true
        default: "23.05.3"
      openwrt_arch:
        description: "OpenWrt arch"
        type: string
        required: true
        default: "mips_24kc"
      openwrt_target:
        description: "OpenWrt target"
        type: string
        required: true
        default: "ath79"
      openwrt_subtarget:
        description: "OpenWrt subtarget"
        type: string
        required: true
        default: "generic"
      openwrt_vermagic:
        description: "OpenWrt vermagic"
        type: string
        required: true
        default: "34a8cffa541c94af8232fe9af7a1f5ba"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        build_env:
          - tag: ${{ inputs.openwrt_version }}
            pkgarch: ${{ inputs.openwrt_arch }}
            target: ${{ inputs.openwrt_target }}
            subtarget: ${{ inputs.openwrt_subtarget }}
            vermagic: ${{ inputs.openwrt_vermagic }}

    steps:
      - name: checkout amneziawg-openwrt
        uses: actions/checkout@v4
        with:
          path: amneziawg-openwrt

      - name: checkout openwrt
        uses: actions/checkout@v4
        with:
          path: openwrt
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: populate extra env
        id: extra-env
        run: |
          cd amneziawg-openwrt
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: restore cached tools and kernel
        id: cache-tools-kernel-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            openwrt/.config
            openwrt/.config.old
            openwrt/feeds.conf
            openwrt/bin/**
            openwrt/build_dir/**
            openwrt/dl/**
            openwrt/feeds/**
            openwrt/package/**
            openwrt/staging_dir/**
            openwrt/tmp/**
          key: ${{ runner.os }}-openwrt-cache-toolchain-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-${{ matrix.build_env.target}}-${{ matrix.build_env.subtarget}}
          restore-keys: |
            ${{ runner.os }}-openwrt-cache-tools-kernel-${{ matrix.build_env.pkgarch}}-

      - name: build amneziawg
        run: |
          cd openwrt

          VERMAGIC=`cat ./build_dir/target-${{ matrix.build_env.pkgarch}}*/linux-${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}/linux-*/.vermagic`
          echo "Vermagic: $VERMAGIC"

          VERMAGIC_EXPECTED=${{ matrix.build_env.vermagic }}
          if [ "$VERMAGIC" != "$VERMAGIC_EXPECTED" ]; then
            echo "Vermagic mismatch: $VERMAGIC, expected $VERMAGIC_EXPECTED"
            exit 1
          fi

          echo "src-git awgopenwrt ../amneziawg-openwrt^${{ github.sha }}" > feeds.conf
          echo "    > feeds.conf:"
          cat feeds.conf
          ./scripts/feeds update
          ./scripts/feeds install -a

          mv .config.old .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-proto-amneziawg=y" >> .config
          make defconfig

          make package/kmod-amneziawg/{clean,download,prepare} V=s
          make package/kmod-amneziawg/compile V=s

          make package/luci-proto-amneziawg/{clean,download,prepare}
          make package/luci-proto-amneziawg/compile V=s

          make V=s package/amneziawg-tools/{clean,download,prepare}
          make V=s package/amneziawg-tools/compile

      - name: prepare artifacts
        run: |
          mkdir -p awgrelease
          postfix="${{ github.ref_name }}-${{ steps.extra-env.outputs.sha_short }}_v${{ matrix.build_env.tag }}_${{ matrix.build_env.pkgarch}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          cp openwrt/bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp openwrt/bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-proto-amneziawg_*.ipk awgrelease/luci-proto-amneziawg_${postfix}.ipk
          cp openwrt/bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          files: awgrelease/*.ipk
