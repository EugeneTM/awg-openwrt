name: build toolchain cache

on:
  workflow_dispatch:
    inputs:
      openwrt_version:
        description: "OpenWrt version"
        type: string
        required: true
        default: "23.05.3"
      openwrt_arch:
        description: "OpenWrt arch"
        type: string
        required: true
        default: "mips_24kc"
      openwrt_target:
        description: "OpenWrt target"
        type: string
        required: true
        default: "ath79"
      openwrt_subtarget:
        description: "OpenWrt subtarget"
        type: string
        required: true
        default: "generic"
      openwrt_vermagic:
        description: "OpenWrt vermagic"
        type: string
        required: true
        default: "34a8cffa541c94af8232fe9af7a1f5ba"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        build_env:
          - tag: ${{ inputs.openwrt_version }}
            pkgarch: ${{ inputs.openwrt_arch }}
            target: ${{ inputs.openwrt_target }}
            subtarget: ${{ inputs.openwrt_subtarget }}
            vermagic: ${{ inputs.openwrt_vermagic }}

    steps:
      - name: checkout openwrt
        uses: actions/checkout@v4
        with:
          path: openwrt
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: building toolchain and kernel
        run: |
          echo "pkgarch: ${{ matrix.build_env.pkgarch}}, target:${{ matrix.build_env.target}}, subtarget: ${{ matrix.build_env.subtarget}}"

          cd openwrt

          # setup & install feeds
          curl -fsL https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/feeds.buildinfo > feeds.conf
          echo "    > feeds.conf:"
          cat feeds.conf
          ./scripts/feeds update
          ./scripts/feeds install -a

          # setup kernel config with amneziawg dependencies
          curl -fsL https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/config.buildinfo > .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config
          make defconfig

          # build toolchain
          echo "    > make tools/install"
          make tools/install -i -j `nproc`
          echo "    > make toolchain/install"
          make toolchain/install  -i -j `nproc`

          # build kernel
          echo "    > make target/linux/compile"
          make target/linux/compile  -i -j `nproc` V=s

          VERMAGIC=`cat ./build_dir/target-${{ matrix.build_env.pkgarch}}*/linux-${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}/linux-*/.vermagic`
          echo "Vermagic: $VERMAGIC"

          VERMAGIC_EXPECTED=${{ matrix.build_env.vermagic }}
          if [ "$VERMAGIC" != "$VERMAGIC_EXPECTED" ]; then
            echo "Vermagic mismatch: $VERMAGIC, expected $VERMAGIC_EXPECTED"
            exit 1
          fi

      - name: save toolchain and kernel cache
        id: cache-tools-kernel-save
        uses: actions/cache/save@v4
        with:
          path: |
            openwrt/.config
            openwrt/.config.old
            openwrt/feeds.conf
            openwrt/bin/**
            openwrt/build_dir/**
            openwrt/dl/**
            openwrt/feeds/**
            openwrt/package/**
            openwrt/staging_dir/**
            openwrt/tmp/**
          key: ${{ runner.os }}-openwrt-cache-toolchain-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-${{ matrix.build_env.target}}-${{ matrix.build_env.subtarget}}
